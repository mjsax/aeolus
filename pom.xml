<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>de.hub.cs.dbis.aeolus</groupId>
    <artifactId>aeolus</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>aeolus</name>
    <packaging>pom</packaging>
    <url>http://www.dbis.informatik.hu-berlin.de/aeolus/</url>
    <inceptionYear>2014</inceptionYear>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>Humboldt-Universität zu Berlin</name>
        <url>https://www.hu-berlin.de</url>
    </organization>

    <developers>
        <developer>
            <id>mjsax</id>
            <name>Matthias J. Sax</name>
            <email>mjsax@informatik.hu-berlin.de</email>
            <organization>Humboldt-Universität zu Berlin, DBIS Group</organization>
            <organizationUrl>http://www.dbis.informatik.hu-berlin.de/</organizationUrl>
            <roles>
                <role>Lead Developer</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
			<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>1.5.5</version>
		  </dependency>
		  <dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>1.5.5</version>
		  </dependency>
		</dependencies>
	</dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.storm</groupId>
      <artifactId>storm-core</artifactId>
      <version>0.9.3</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <!-- Storm 0.9.3 is not compatible with Java 1.7; need to stick with Java 1.6 -->
          <source>1.6</source>
          <target>1.6</target>
          <compilerArgument>-Xlint:all</compilerArgument>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.16</version>
        <configuration>
          <reuseForks>false</reuseForks>
          <forkCount>1</forkCount>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    
      <plugin>
        <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
        <artifactId>maven-java-formatter-plugin</artifactId>
        <version>0.4</version>
        <executions>
          <execution>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <configFile>formatter.xml</configFile>
          <overrideConfigCompilerVersion>true</overrideConfigCompilerVersion>
          <compilerSource>1.6</compilerSource>
          <compilerCompliance>1.6</compilerCompliance>
          <compilerTargetPlatform>1.6</compilerTargetPlatform>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.8</version>
        <configuration>
          <verbose>false</verbose>
        </configuration>
        <executions>
          <execution>
            <id>first</id>
            <goals>
              <goal>update-file-header</goal>
            </goals>
            <phase>process-sources</phase>
            <configuration>
              <licenseName>apache_v2</licenseName>
              <roots>
                <root>src/main/java</root>
                <root>src/test/java</root>
              </roots>
              <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
              <processStartTag>#!</processStartTag>
              <processEndTag>#_</processEndTag>
              <sectionDelimiter>%</sectionDelimiter>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.3</version>
        <configuration>
          <links>
            <link>https://storm.apache.org/javadoc/apidocs/</link>
          </links>
          <aggregate>true</aggregate>
          <show>package</show>
          <validateLinks>true</validateLinks>
        </configuration>
      </plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-checkstyle-plugin</artifactId>
		  <version>2.6</version>
		  <executions>
			  <execution>
				  <phase>validate</phase>
				  <id>checkstyle</id>
				  <goals>
					  <goal>check</goal>
				  </goals>
			  </execution>
		  </executions>
		  <configuration>
			<configLocation>check_style.xml</configLocation>
		  </configuration>
		</plugin>
    </plugins>
    
    <pluginManagement>
      <plugins>
         <!-- This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <versionRange>[1.8,)</versionRange>
                    <goals>
                      <goal>update-file-header</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
                    <artifactId>maven-java-formatter-plugin</artifactId>
                    <versionRange>0.4</versionRange>
                    <goals>
                      <goal>format</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <modules>
    <module>build-tools</module>
    <module>testUtils</module>
    <module>aeolus-storm-connector</module>
    <module>queries</module>
    <module>batching</module>
    <module>monitoring</module>
    <module>optimization</module>
  </modules>

</project>
